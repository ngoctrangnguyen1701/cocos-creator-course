{"version":3,"sources":["assets\\scripts\\Animation.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEAuCC;QApCG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;;QAgCvB,iBAAiB;IACrB,CAAC;IA/BG,wBAAwB;IAExB,yBAAM,GAAN;QACI,yBAAyB;IAE7B,CAAC;IAED,wBAAK,GAAL;QACI,wBAAwB;QAExB,IAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA;QACrD,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC1B,iEAAiE;QAEjE,0BAA0B;QAC1B,IAAM,cAAc,GAAG,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAA;QAE9D,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAC;YACnD,IAAG,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC7B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAG,cAAc,CAAC,QAAQ,EAAE;oBACxB,cAAc,CAAC,IAAI,EAAE,CAAA;iBACxB;qBACI;oBACD,cAAc,CAAC,KAAK,EAAE,CAAA;iBACzB;aACJ;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAjCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CACI;IAGvB;QADC,QAAQ;0CACc;IANN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAuC5B;IAAD,eAAC;CAvCD,AAuCC,CAvCqC,EAAE,CAAC,SAAS,GAuCjD;kBAvCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // console.log('onLoad');\r\n        \r\n    }\r\n\r\n    start () {\r\n        // console.log('start');\r\n\r\n        const nodeAnimation = this.getComponent(cc.Animation)\r\n        nodeAnimation.play('walk')\r\n        // walk is name of animation that created at cocos creator screen\r\n\r\n        //or use getAnimationState\r\n        const animationState = nodeAnimation.getAnimationState('walk')\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, (e) => {\r\n            if(e.keyCode === cc.macro.KEY.p) {\r\n                console.log('Press P');\r\n                if(animationState.isPaused) {\r\n                    animationState.play()\r\n                }\r\n                else {\r\n                    animationState.pause()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}