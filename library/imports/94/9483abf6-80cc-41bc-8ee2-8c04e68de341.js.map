{"version":3,"sources":["assets\\scripts\\Move.js"],"names":["cc","Class","Component","properties","typeTranslate","speed","start","update","dt","translateX","node","position","x","scaleX","maxTranslateX","parent","width","setPosition","y"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAELC,EAAAA,UAAU,EAAE;AACRC,IAAAA,aAAa,EAAE,aADP;AAERC,IAAAA,KAAK,EAAE;AAFC,GAFP;AAOL;AAEA;AAEAC,EAAAA,KAXK,mBAWI,CAER,CAbI;AAeLC,EAAAA,MAfK,kBAeGC,EAfH,EAeO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAG,KAAKJ,aAAL,KAAuB,aAA1B,EAAyC;AACrC,UAAMK,UAAU,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,GAAuB,KAAKP,KAAL,GAAaG,EAAvD;AACA,UAAMK,MAAM,GAAG,KAAKH,IAAL,CAAUG,MAAzB;AACA,UAAMC,aAAa,GAAG,EAAE,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,KAAjB,GAAyB,CAA3B,IAAiC,KAAKN,IAAL,CAAUM,KAAV,GAAkBH,MAAlB,GAA2B,CAAlF;AACA,WAAKH,IAAL,CAAUO,WAAV,CAAsBR,UAAtB,EAAkC,KAAKC,IAAL,CAAUC,QAAV,CAAmBO,CAArD;;AACA,UAAGT,UAAU,GAAGK,aAAhB,EAA+B;AAC3B;AACA;AACA,aAAKJ,IAAL,CAAUO,WAAV,CAAsBH,aAAtB,EAAqC,KAAKJ,IAAL,CAAUC,QAAV,CAAmBO,CAAxD;AACA,aAAKd,aAAL,GAAqB,aAArB;AACH;AACJ,KAXD,MAYK;AACD,UAAMK,WAAU,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,GAAuB,KAAKP,KAAL,GAAaG,EAAvD;;AACA,UAAMK,OAAM,GAAG,KAAKH,IAAL,CAAUG,MAAzB;;AACA,UAAMC,cAAa,GAAI,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,KAAjB,GAAyB,CAA1B,GAAgC,KAAKN,IAAL,CAAUM,KAAV,GAAkBH,OAAlB,GAA2B,CAAjF;;AACA,WAAKH,IAAL,CAAUO,WAAV,CAAsBR,WAAtB,EAAkC,KAAKC,IAAL,CAAUC,QAAV,CAAmBO,CAArD;;AACA,UAAGT,WAAU,GAAGK,cAAhB,EAA+B;AAC3B;AACA;AACA,aAAKJ,IAAL,CAAUO,WAAV,CAAsBH,cAAtB,EAAqC,KAAKJ,IAAL,CAAUC,QAAV,CAAmBO,CAAxD;AACA,aAAKd,aAAL,GAAqB,aAArB;AACH;AACJ;AACJ;AAxDI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        typeTranslate: 'rightToLeft',\r\n        speed: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        //update that repeat every frame\r\n        // console.log(this.typeTranslate);\r\n        // // console.log('dt', dt);\r\n        // // console.log('this.node.position.x', this.node.position.x);\r\n        // const translateX = this.node.position.x - 100 * dt\r\n        // // console.log('translateX: ', translateX);\r\n        // const scaleX = this.node.scaleX\r\n        // // console.log('scaleX: ', scaleX);\r\n        // const maxTranslateX = -(this.node.parent.width / 2) + (this.node.width * scaleX / 2)\r\n        // // console.log('maxTranslateX: ', maxTranslateX);\r\n        // this.node.setPosition(translateX, 0)\r\n        // if(translateX < maxTranslateX) {\r\n        //     console.log('aaaaaaaa');\r\n        //     this.node.setPosition(maxTranslateX, 0)\r\n        // }\r\n\r\n        if(this.typeTranslate === 'rightToLeft') {\r\n            const translateX = this.node.position.x - this.speed * dt\r\n            const scaleX = this.node.scaleX\r\n            const maxTranslateX = -(this.node.parent.width / 2) + (this.node.width * scaleX / 2)\r\n            this.node.setPosition(translateX, this.node.position.y)\r\n            if(translateX < maxTranslateX) {\r\n                //when node translate to the end of left side\r\n                // console.log('aaaaaaaa');\r\n                this.node.setPosition(maxTranslateX, this.node.position.y)\r\n                this.typeTranslate = 'leftToRight'\r\n            }\r\n        }\r\n        else {\r\n            const translateX = this.node.position.x + this.speed * dt\r\n            const scaleX = this.node.scaleX\r\n            const maxTranslateX = (this.node.parent.width / 2) - (this.node.width * scaleX / 2)\r\n            this.node.setPosition(translateX, this.node.position.y)\r\n            if(translateX > maxTranslateX) {\r\n                //when node translate to the end of right side\r\n                // console.log('bbbbbbbb');\r\n                this.node.setPosition(maxTranslateX, this.node.position.y)\r\n                this.typeTranslate = 'rightToLeft'\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}